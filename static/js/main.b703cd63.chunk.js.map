{"version":3,"sources":["Components/Section/Section.js","Components/Statistics/Notification.js","Components/Statistics/Statistics.js","Components/FeedbackOptions/FeedbackOptions.js","App.js","index.js"],"names":["Section","title","children","Notification","Statistics","state","total","positivePercentage","Object","keys","map","key","FeedbackOptions","onClick","type","name","App","good","neutral","bad","handleClick","e","target","setState","prevState","countTotalFeedback","values","reduce","previous","current","countPositiveFeedbackPercentage","toFixed","totalFeedback","this","positiveFeedback","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wSAYeA,MAVf,YAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACxB,OACE,mCACE,gCACE,6BAAKD,IACJC,QCAMC,MAPf,WACE,OACE,mCACE,qDC8BSC,MA9Bf,YAA2D,IAArCC,EAAoC,EAApCA,MAAOC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBAClC,OACE,mCACGD,EACC,qCACGE,OAAOC,KAAKJ,GAAOK,KAAI,SAAAC,GAAG,OACzB,8BACGA,EADH,KACUN,EAAMM,GADhB,MAAQA,MAIV,wCAAWL,KACX,qDAAwBC,QAG1B,cAAC,EAAD,OCMOK,MArBf,YAA8C,IAAnBP,EAAkB,EAAlBA,MAAOQ,EAAW,EAAXA,QAChC,OACE,mCACGL,OAAOC,KAAKJ,GAAOK,KAAI,SAAAC,GAAG,OACzB,wBAAkBG,KAAK,SAASC,KAAMJ,EAAKE,QAASA,EAApD,SACGF,GADUA,SC6CNK,E,4MA5CbX,MAAQ,CAAEY,KAAM,EAAGC,QAAS,EAAGC,IAAK,G,EACpCC,YAAc,SAAAC,GACZ,IAAQN,EAASM,EAAEC,OAAXP,KACR,EAAKQ,UAAS,SAAAC,GAAS,sBACpBT,EAAOS,EAAUT,GAAQ,O,EAG9BU,mBAAqB,WAGnB,OAFoBjB,OAAOkB,OAAO,EAAKrB,OACbsB,QAAO,SAACC,EAAUC,GAAX,OAAuBD,EAAWC,M,EAGrEC,gCAAkC,WAChC,IAAQb,EAAS,EAAKZ,MAAdY,KACFX,EAAQ,EAAKmB,qBAGnB,OAAKnB,GAFeW,EAAOX,EAAS,KAMlByB,UAHT,G,4CAKX,WACE,IAAMC,EAAgBC,KAAKR,qBACrBS,EAAmBD,KAAKH,kCAE9B,OACE,qCACE,cAAC,EAAD,CAAS7B,MAAM,wBAAf,SACE,cAAC,EAAD,CAAiBI,MAAO4B,KAAK5B,MAAOQ,QAASoB,KAAKb,gBAEpD,cAAC,EAAD,CAASnB,MAAM,aAAf,SACE,cAAC,EAAD,CACEI,MAAO4B,KAAK5B,MACZC,MAAO0B,EACPzB,mBAAoB2B,a,GArCdC,aCDlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.b703cd63.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Section({ title, children }) {\r\n  return (\r\n    <>\r\n      <div>\r\n        <h2>{title}</h2>\r\n        {children}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nexport default Section;\r\n","function Notification() {\r\n  return (\r\n    <>\r\n      <p>No feedback given</p>\r\n    </>\r\n  );\r\n}\r\nexport default Notification;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Notification from './Notification';\r\nfunction Statistics({ state, total, positivePercentage }) {\r\n  return (\r\n    <>\r\n      {total ? (\r\n        <>\r\n          {Object.keys(state).map(key => (\r\n            <p key={key}>\r\n              {key}: {state[key]}.\r\n            </p>\r\n          ))}\r\n          <p>Total: {total}</p>\r\n          <p>Positive Percentage:{positivePercentage}</p>\r\n        </>\r\n      ) : (\r\n        <Notification />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nStatistics.propTypes = {\r\n  positivePercentage: PropTypes.func,\r\n  total: PropTypes.func,\r\n  state: PropTypes.shape({\r\n    good: PropTypes.number,\r\n    neutral: PropTypes.number,\r\n    bad: PropTypes.number,\r\n  }),\r\n};\r\n\r\nexport default Statistics;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nfunction FeedbackOptions({ state, onClick }) {\r\n  return (\r\n    <>\r\n      {Object.keys(state).map(key => (\r\n        <button key={key} type=\"button\" name={key} onClick={onClick}>\r\n          {key}\r\n        </button>\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n  onClick: PropTypes.func,\r\n  state: PropTypes.shape({\r\n    good: PropTypes.number,\r\n    neutral: PropTypes.number,\r\n    bad: PropTypes.number,\r\n  }),\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import './App.css';\nimport React, { Component } from 'react';\nimport Section from './Components/Section/Section';\nimport Statistics from './Components/Statistics/Statistics';\nimport FeedbackOptions from './Components/FeedbackOptions/FeedbackOptions';\n\nclass App extends Component {\n  state = { good: 0, neutral: 0, bad: 0 };\n  handleClick = e => {\n    const { name } = e.target;\n    this.setState(prevState => ({\n      [name]: prevState[name] + 1,\n    }));\n  };\n  countTotalFeedback = () => {\n    const stateValues = Object.values(this.state);\n    const total = stateValues.reduce((previous, current) => previous + current);\n    return total;\n  };\n  countPositiveFeedbackPercentage = () => {\n    const { good } = this.state;\n    const total = this.countTotalFeedback();\n    const percentage = (good / total) * 100;\n\n    if (!total) {\n      return 0;\n    }\n\n    return percentage.toFixed();\n  };\n  render() {\n    const totalFeedback = this.countTotalFeedback();\n    const positiveFeedback = this.countPositiveFeedbackPercentage();\n\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions state={this.state} onClick={this.handleClick} />\n        </Section>\n        <Section title=\"Statistics\">\n          <Statistics\n            state={this.state}\n            total={totalFeedback}\n            positivePercentage={positiveFeedback}\n          />\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}